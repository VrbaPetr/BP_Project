{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nfunction AppComponent_pre_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"pre\");\n    i0.ɵɵtext(1, \"ng generate component xyz\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9)(2, \"h5\", 10);\n    i0.ɵɵtext(3, \"Single Page Aplikace\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 11);\n    i0.ɵɵtext(5, \"Single Page Aplikace (SPA) jsou takov\\u00E9, kter\\u00E9 se na\\u010D\\u00EDtaj\\u00ED jako jedna jedin\\u00E1 str\\u00E1nka. Aplikace m\\u016F\\u017Ee m\\u00EDt jednostr\\u00E1nkov\\u00FD design ale stejn\\u011B tak m\\u016F\\u017Ee m\\u00EDt klasickou strukturu odkaz\\u016F. Rozd\\u00EDl je ale v tom, \\u017Ee narozd\\u00EDl od zbytku str\\u00E1nek se jednostr\\u00E1nkov\\u00E9 na\\u010D\\u00EDtaj\\u00ED jednou a n\\u00E1sledn\\u00E1 orientace po str\\u00E1nce se ji\\u017E odehr\\u00E1v\\u00E1 v prohl\\u00ED\\u017Ee\\u010Di. D\\u00EDky tomu jsou tak mnohem rychlej\\u0161\\u00ED a efektivn\\u011Bjs\\u00ED. Sami si zkuste, \\u017Ee po kliknut\\u00ED na jakoukoliv funkcionalitu na t\\u00E9to str\\u00E1nce se aplikace nemus\\u00ED na\\u010D\\u00EDtat, ale p\\u0159itom se m\\u011Bn\\u00ED jej\\u00ED obsah.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"a\", 12);\n    i0.ɵɵtext(7, \"Card link\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"a\", 12);\n    i0.ɵɵtext(9, \"Another link\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AppComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9)(2, \"h5\", 10);\n    i0.ɵɵtext(3, \"Micro-Frontend\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 11);\n    i0.ɵɵtext(5, \"Micro-Frontend (MF) je jedna z variant, jak lze pojmout v\\u00FDvoj aplikace. Je prav\\u00FDm opakem aplikac\\u00ED monolitick\\u00FDch. U monolitick\\u00E9 aplikace se toti\\u017E v\\u00FDvoj a funcionalita odehr\\u00E1v\\u00E1 v podob\\u011B jedn\\u00E9 spojit\\u00E9 aplikace. U Micro-Fronted se ale aplikuje takzvan\\u00E1 mikroservis architektura. Ta rozd\\u011Bluje celek do jednotliv\\u00FDch komponent / slu\\u017Eeb, kter\\u00E9 jsou na sob\\u011B nez\\u00E1visl\\u00E9. To umo\\u017E\\u0148uje jejich odd\\u011Blen\\u00FD v\\u00FDvoj i nahrazov\\u00E1n\\u00ED. Micro-Frontend je pak pojem v\\u011Bnuj\\u00EDc\\u00ED se spojen\\u00ED view v\\u0161ech komponent do na pohled celistv\\u00E9 str\\u00E1nky.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"a\", 12);\n    i0.ɵɵtext(7, \"Card link\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"a\", 12);\n    i0.ɵɵtext(9, \"Another link\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AppComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9)(2, \"h5\", 10);\n    i0.ɵɵtext(3, \"V\\u00FDhody SPA\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 11);\n    i0.ɵɵtext(5, \"SPA m\\u00E1 oproti dal\\u0161\\u00EDm technologi\\u00EDm opravdu velk\\u00E9 mno\\u017Estv\\u00ED v\\u00FDhod. Tou prvn\\u00ED je rychlost, kdy se d\\u00EDky na\\u010Dten\\u00ED cel\\u00E9 prezenta\\u010Dn\\u00ED logiky odehr\\u00E1v\\u00E1 orientace na str\\u00E1nce extr\\u00E9mn\\u011B rychle. Mimo toho je na\\u010Dten\\u00ED kompletn\\u00EDho view jen do prohl\\u00ED\\u017Ee\\u010De i d\\u016Fvodem, pro\\u010D mohou Single Page Aplikace fungovat i v p\\u0159\\u00EDpad\\u011B, kdy po na\\u010Dten\\u00ED nen\\u00ED u\\u017Eivatel online. V\\u0161echny tyto v\\u00FDhody p\\u0159itom vn\\u00EDm\\u00E1 i s\\u00E1m provozovatel webu. A to tak, \\u017Ee d\\u00EDky d\\u011Blb\\u011B pr\\u00E1ce mezi server a prohl\\u00ED\\u017Ee\\u010D u u\\u017Eivatele, je v\\u00FDrazn\\u011B ni\\u017E\\u0161\\u00ED zat\\u00ED\\u017Een\\u00ED produk\\u010Dn\\u00EDho serveru. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"a\", 12);\n    i0.ɵɵtext(7, \"Card link\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"a\", 12);\n    i0.ɵɵtext(9, \"Another link\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AppComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9)(2, \"h5\", 10);\n    i0.ɵɵtext(3, \"V\\u00FDhody Micro-Frontend\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 11);\n    i0.ɵɵtext(5, \"Mi\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"a\", 12);\n    i0.ɵɵtext(7, \"Card link\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"a\", 12);\n    i0.ɵɵtext(9, \"Another link\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AppComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9)(2, \"h5\", 10);\n    i0.ɵɵtext(3, \"Single Page Aplikace\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 11);\n    i0.ɵɵtext(5, \"Single Page Aplikace (SPA) jsou takov\\u00E9, kter\\u00E9 se na\\u010D\\u00EDtaj\\u00ED jako jedna jedin\\u00E1 str\\u00E1nka. Aplikace m\\u016F\\u017Ee m\\u00EDt jednostr\\u00E1nkov\\u00FD design ale stejn\\u011B tak m\\u016F\\u017Ee m\\u00EDt klasickou strukturu odkaz\\u016F. Rozd\\u00EDl je ale v tom, \\u017Ee narozd\\u00EDl od zbytku str\\u00E1nek se jednostr\\u00E1nkov\\u00E9 na\\u010D\\u00EDtaj\\u00ED jednou a n\\u00E1sledn\\u00E1 orientace po str\\u00E1nce se ji\\u017E odehr\\u00E1v\\u00E1 v prohl\\u00ED\\u017Ee\\u010Di. D\\u00EDky tomu jsou tak mnohem rychlej\\u0161\\u00ED a efektivn\\u011Bjs\\u00ED. Sami si zkuste, \\u017Ee po kliknut\\u00ED na jakoukoliv funkcionalitu na t\\u00E9to str\\u00E1nce se aplikace nemus\\u00ED na\\u010D\\u00EDtat, ale p\\u0159itom se m\\u011Bn\\u00ED jej\\u00ED obsah.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"a\", 12);\n    i0.ɵɵtext(7, \"Card link\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"a\", 12);\n    i0.ɵɵtext(9, \"Another link\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.title = 'angular-app';\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 23,\n  vars: 6,\n  consts: [[\"role\", \"main\", 1, \"container\"], [\"type\", \"hidden\"], [\"selection\", \"\"], [1, \"row\", \"justify-content-center\"], [\"href\", \"#\", 1, \"btn-sm\", \"btn-info\", \"angular_button\", 3, \"click\"], [1, \"angular_output\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [\"class\", \"card\", 4, \"ngSwitchCase\"], [1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [\"href\", \"#\", 1, \"card-link\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"input\", 1, 2);\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"a\", 4);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_a_click_4_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(_r0.value = \"spa\");\n      });\n      i0.ɵɵtext(5, \"O Single Page Aplikac\\u00EDch\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"a\", 4);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_a_click_6_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(_r0.value = \"mf\");\n      });\n      i0.ɵɵtext(7, \"O Micro-Frontend\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"a\", 4);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_a_click_9_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(_r0.value = \"spa_plus\");\n      });\n      i0.ɵɵtext(10, \"V\\u00FDhody SPA\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"a\", 4);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_a_click_11_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(_r0.value = \"mf_plus\");\n      });\n      i0.ɵɵtext(12, \"V\\u00FDhody MF\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"a\", 4);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_a_click_13_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(_r0.value = \"about\");\n      });\n      i0.ɵɵtext(14, \"V\\u00EDce o aplikaci\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 5);\n      i0.ɵɵtemplate(16, AppComponent_pre_16_Template, 2, 0, \"pre\", 6);\n      i0.ɵɵtemplate(17, AppComponent_div_17_Template, 10, 0, \"div\", 7);\n      i0.ɵɵtemplate(18, AppComponent_div_18_Template, 10, 0, \"div\", 7);\n      i0.ɵɵtemplate(19, AppComponent_div_19_Template, 10, 0, \"div\", 7);\n      i0.ɵɵtemplate(20, AppComponent_div_20_Template, 10, 0, \"div\", 7);\n      i0.ɵɵtemplate(21, AppComponent_div_21_Template, 10, 0, \"div\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(22, \"router-outlet\");\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(2);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngSwitch\", _r0.value);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"spa\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"mf\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"spa_plus\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"mf_plus\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"about\");\n    }\n  },\n  dependencies: [i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, i2.RouterOutlet],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAmBMA,2BAAsB;IAAAA,yCAAyB;IAAAA,iBAAM;;;;;IACnDA,8BAAwC;IAEbA,oCAAoB;IAAAA,iBAAK;IAChDA,6BAAqB;IAAAA,4wBAG6G;IAAAA,iBAAI;IACtIA,6BAA8B;IAAAA,yBAAS;IAAAA,iBAAI;IAC3CA,6BAA8B;IAAAA,4BAAY;IAAAA,iBAAI;;;;;IAGlDA,8BAAuC;IAEZA,8BAAc;IAAAA,iBAAK;IAC1CA,6BAAqB;IAAAA,srBAG8G;IAAAA,iBAAI;IACvIA,6BAA8B;IAAAA,yBAAS;IAAAA,iBAAI;IAC3CA,6BAA8B;IAAAA,4BAAY;IAAAA,iBAAI;;;;;IAGlDA,8BAA6C;IAElBA,+BAAU;IAAAA,iBAAK;IACtCA,6BAAqB;IAAAA,wzBAIrB;IAAAA,iBAAI;IACJA,6BAA8B;IAAAA,yBAAS;IAAAA,iBAAI;IAC3CA,6BAA8B;IAAAA,4BAAY;IAAAA,iBAAI;;;;;IAGlDA,8BAA4C;IAEjBA,0CAAqB;IAAAA,iBAAK;IACjDA,6BAAqB;IAAAA,kBAAE;IAAAA,iBAAI;IAC3BA,6BAA8B;IAAAA,yBAAS;IAAAA,iBAAI;IAC3CA,6BAA8B;IAAAA,4BAAY;IAAAA,iBAAI;;;;;IAGlDA,8BAA0C;IAEfA,oCAAoB;IAAAA,iBAAK;IAChDA,6BAAqB;IAAAA,4wBAG6G;IAAAA,iBAAI;IACtIA,6BAA8B;IAAAA,yBAAS;IAAAA,iBAAI;IAC3CA,6BAA8B;IAAAA,4BAAY;IAAAA,iBAAI;;;AC/D1D,OAAM,MAAOC,YAAY;EALzBC;IAME,UAAK,GAAG,aAAa;;;AADVD,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAE;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDDzBP,8BAAmC;MACjCA,8BAAgC;MAC9BA,8BAAwC;MACaA;QAAAA;QAAA;QAAA,OAASA,2BAAkB,KAAK;MAAA,EAAC;MAACA,6CAAwB;MAAAA,iBAAI;MACjHA,4BAAoF;MAAjCA;QAAAA;QAAA;QAAA,OAASA,2BAAkB,IAAI;MAAA,EAAC;MAACA,gCAAgB;MAAAA,iBAAI;MAE1GA,8BAAwC;MACWA;QAAAA;QAAA;QAAA,OAASA,2BAAkB,UAAU;MAAA,EAAC;MAACA,gCAAU;MAAAA,iBAAI;MACxGA,6BAAyF;MAAtCA;QAAAA;QAAA;QAAA,OAASA,2BAAkB,SAAS;MAAA,EAAC;MAACA,+BAAS;MAAAA,iBAAI;MACtGA,6BAAuF;MAApCA;QAAAA;QAAA;QAAA,OAASA,2BAAkB,OAAO;MAAA,EAAC;MAACA,qCAAe;MAAAA,iBAAI;MAG5GA,+BAAyD;MACrDA,+DAAqD;MACnDA,gEAUM;MACNA,gEAUM;MACNA,gEAWM;MACNA,gEAOM;MACNA,gEAUM;MACZA,iBAAM;MAGRA,iCAA+B;;;;MA1DDA,gBAA4B;MAA5BA,oCAA4B;MAE/BA,eAAmB;MAAnBA,oCAAmB;MAWnBA,eAAkB;MAAlBA,mCAAkB;MAWlBA,eAAwB;MAAxBA,yCAAwB;MAYxBA,eAAuB;MAAvBA,wCAAuB;MAQvBA,eAAqB;MAArBA,sCAAqB","names":["i0","AppComponent","constructor","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\PC\\Desktop\\BP_Projekt\\angular-app\\src\\app\\app.component.html","C:\\Users\\PC\\Desktop\\BP_Projekt\\angular-app\\src\\app\\app.component.ts"],"sourcesContent":["<style>\n\n</style>\n\n<!-- Toolbar -->\n\n<div class=\"container\" role=\"main\">\n  <input type=\"hidden\" #selection>\n    <div class=\"row justify-content-center\">\n      <a href=\"#\" class=\"btn-sm btn-info angular_button\" (click)=\"selection.value = 'spa'\">O Single Page Aplikacích</a>\n      <a href=\"#\" class=\"btn-sm btn-info angular_button\" (click)=\"selection.value = 'mf'\">O Micro-Frontend</a>\n    </div>\n    <div class=\"row justify-content-center\">\n    <a href=\"#\" class=\"btn-sm btn-info angular_button\" (click)=\"selection.value = 'spa_plus'\">Výhody SPA</a>\n    <a href=\"#\" class=\"btn-sm btn-info angular_button\" (click)=\"selection.value = 'mf_plus'\">Výhody MF</a>\n    <a href=\"#\" class=\"btn-sm btn-info angular_button\" (click)=\"selection.value = 'about'\">Více o aplikaci</a>\n    </div>\n  <!-- Terminal -->\n  <div class=\"angular_output\" [ngSwitch]=\"selection.value\">\n      <pre *ngSwitchDefault>ng generate component xyz</pre>\n        <div class=\"card\" *ngSwitchCase=\"'spa'\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Single Page Aplikace</h5>\n            <p class=\"card-text\">Single Page Aplikace (SPA) jsou takové, které se načítají jako jedna jediná stránka. Aplikace může mít jednostránkový design\n              ale stejně tak může mít klasickou strukturu odkazů. Rozdíl je ale v tom, že narozdíl od zbytku stránek se jednostránkové načítají\n              jednou a následná orientace po stránce se již odehrává v prohlížeči. Díky tomu jsou tak mnohem rychlejší a efektivnějsí. Sami\n              si zkuste, že po kliknutí na jakoukoliv funkcionalitu na této stránce se aplikace nemusí načítat, ale přitom se mění její obsah.</p>\n            <a href=\"#\" class=\"card-link\">Card link</a>\n            <a href=\"#\" class=\"card-link\">Another link</a>\n          </div>\n        </div>\n        <div class=\"card\" *ngSwitchCase=\"'mf'\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Micro-Frontend</h5>\n            <p class=\"card-text\">Micro-Frontend (MF) je jedna z variant, jak lze pojmout vývoj aplikace. Je pravým opakem aplikací monolitických. U monolitické\n              aplikace se totiž vývoj a funcionalita odehrává v podobě jedné spojité aplikace. U Micro-Fronted se ale aplikuje takzvaná\n              mikroservis architektura. Ta rozděluje celek do jednotlivých komponent / služeb, které jsou na sobě nezávislé. To umožňuje jejich\n              oddělený vývoj i nahrazování. Micro-Frontend je pak pojem věnující se spojení view všech komponent do na pohled celistvé stránky.</p>\n            <a href=\"#\" class=\"card-link\">Card link</a>\n            <a href=\"#\" class=\"card-link\">Another link</a>\n          </div>\n        </div>\n        <div class=\"card\" *ngSwitchCase=\"'spa_plus'\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Výhody SPA</h5>\n            <p class=\"card-text\">SPA má oproti dalším technologiím opravdu velké množství výhod. Tou první je rychlost, kdy se díky načtení celé\n              prezentační logiky odehrává orientace na stránce extrémně rychle. Mimo toho je načtení kompletního view jen do prohlížeče i důvodem,\n              proč mohou Single Page Aplikace fungovat i v případě, kdy po načtení není uživatel online. Všechny tyto výhody přitom vnímá i sám\n              provozovatel webu. A to tak, že díky dělbě práce mezi server a prohlížeč u uživatele, je výrazně nižší zatížení produkčního serveru.\n            </p>\n            <a href=\"#\" class=\"card-link\">Card link</a>\n            <a href=\"#\" class=\"card-link\">Another link</a>\n          </div>\n        </div>\n        <div class=\"card\" *ngSwitchCase=\"'mf_plus'\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Výhody Micro-Frontend</h5>\n            <p class=\"card-text\">Mi</p>\n            <a href=\"#\" class=\"card-link\">Card link</a>\n            <a href=\"#\" class=\"card-link\">Another link</a>\n          </div>\n        </div>\n        <div class=\"card\" *ngSwitchCase=\"'about'\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Single Page Aplikace</h5>\n            <p class=\"card-text\">Single Page Aplikace (SPA) jsou takové, které se načítají jako jedna jediná stránka. Aplikace může mít jednostránkový design\n              ale stejně tak může mít klasickou strukturu odkazů. Rozdíl je ale v tom, že narozdíl od zbytku stránek se jednostránkové načítají\n              jednou a následná orientace po stránce se již odehrává v prohlížeči. Díky tomu jsou tak mnohem rychlejší a efektivnějsí. Sami\n              si zkuste, že po kliknutí na jakoukoliv funkcionalitu na této stránce se aplikace nemusí načítat, ale přitom se mění její obsah.</p>\n            <a href=\"#\" class=\"card-link\">Card link</a>\n            <a href=\"#\" class=\"card-link\">Another link</a>\n          </div>\n        </div>\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-app';\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}