{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nfunction AppComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"h5\", 12);\n    i0.ɵɵtext(3, \"Single Page Aplikace\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 13);\n    i0.ɵɵtext(5, \"Single Page Aplikace (SPA) jsou takov\\u00E9, kter\\u00E9 se na\\u010D\\u00EDtaj\\u00ED jako jedna jedin\\u00E1 str\\u00E1nka. Aplikace m\\u016F\\u017Ee m\\u00EDt jednostr\\u00E1nkov\\u00FD design ale stejn\\u011B tak m\\u016F\\u017Ee m\\u00EDt klasickou strukturu odkaz\\u016F. Rozd\\u00EDl je ale v tom, \\u017Ee narozd\\u00EDl od zbytku str\\u00E1nek se jednostr\\u00E1nkov\\u00E9 na\\u010D\\u00EDtaj\\u00ED jednou a n\\u00E1sledn\\u00E1 orientace po str\\u00E1nce se ji\\u017E odehr\\u00E1v\\u00E1 v prohl\\u00ED\\u017Ee\\u010Di. D\\u00EDky tomu jsou tak mnohem rychlej\\u0161\\u00ED a efektivn\\u011Bjs\\u00ED. Sami si zkuste, \\u017Ee po kliknut\\u00ED na jakoukoliv funkcionalitu na t\\u00E9to str\\u00E1nce se aplikace nemus\\u00ED na\\u010D\\u00EDtat, ale p\\u0159itom se m\\u011Bn\\u00ED jej\\u00ED obsah.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"a\", 14);\n    i0.ɵɵtext(7, \"Vice o SPA (Anglicky)\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AppComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"h5\", 12);\n    i0.ɵɵtext(3, \"Single Page Aplikace\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 13);\n    i0.ɵɵtext(5, \"Single Page Aplikace (SPA) jsou takov\\u00E9, kter\\u00E9 se na\\u010D\\u00EDtaj\\u00ED jako jedna jedin\\u00E1 str\\u00E1nka. Aplikace m\\u016F\\u017Ee m\\u00EDt jednostr\\u00E1nkov\\u00FD design ale stejn\\u011B tak m\\u016F\\u017Ee m\\u00EDt klasickou strukturu odkaz\\u016F. Rozd\\u00EDl je ale v tom, \\u017Ee narozd\\u00EDl od zbytku str\\u00E1nek se jednostr\\u00E1nkov\\u00E9 na\\u010D\\u00EDtaj\\u00ED jednou a n\\u00E1sledn\\u00E1 orientace po str\\u00E1nce se ji\\u017E odehr\\u00E1v\\u00E1 v prohl\\u00ED\\u017Ee\\u010Di. D\\u00EDky tomu jsou tak mnohem rychlej\\u0161\\u00ED a efektivn\\u011Bjs\\u00ED. Sami si zkuste, \\u017Ee po kliknut\\u00ED na jakoukoliv funkcionalitu na t\\u00E9to str\\u00E1nce se aplikace nemus\\u00ED na\\u010D\\u00EDtat, ale p\\u0159itom se m\\u011Bn\\u00ED jej\\u00ED obsah.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"a\", 14);\n    i0.ɵɵtext(7, \"Vice o SPA (Anglicky)\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AppComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"h5\", 12);\n    i0.ɵɵtext(3, \"Micro-Frontend\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 13);\n    i0.ɵɵtext(5, \"Micro-Frontend (MF) je jedna z variant, jak lze pojmout v\\u00FDvoj aplikace. Je prav\\u00FDm opakem aplikac\\u00ED monolitick\\u00FDch. U monolitick\\u00E9 aplikace se toti\\u017E v\\u00FDvoj a funcionalita odehr\\u00E1v\\u00E1 v podob\\u011B jedn\\u00E9 spojit\\u00E9 aplikace. U Micro-Fronted se ale aplikuje takzvan\\u00E1 mikroservis architektura. Ta rozd\\u011Bluje celek do jednotliv\\u00FDch komponent / slu\\u017Eeb, kter\\u00E9 jsou na sob\\u011B nez\\u00E1visl\\u00E9. To umo\\u017E\\u0148uje jejich odd\\u011Blen\\u00FD v\\u00FDvoj i nahrazov\\u00E1n\\u00ED. Micro-Frontend je pak pojem v\\u011Bnuj\\u00EDc\\u00ED se spojen\\u00ED view v\\u0161ech komponent do na pohled celistv\\u00E9 str\\u00E1nky. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"a\", 15);\n    i0.ɵɵtext(7, \"V\\u00EDce o Micro-Frontend (Anglicky)\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AppComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"h5\", 12);\n    i0.ɵɵtext(3, \"V\\u00FDhody SPA\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 13);\n    i0.ɵɵtext(5, \"SPA m\\u00E1 oproti dal\\u0161\\u00EDm technologi\\u00EDm opravdu velk\\u00E9 mno\\u017Estv\\u00ED v\\u00FDhod. Tou prvn\\u00ED je rychlost, kdy se d\\u00EDky na\\u010Dten\\u00ED cel\\u00E9 prezenta\\u010Dn\\u00ED logiky odehr\\u00E1v\\u00E1 orientace na str\\u00E1nce extr\\u00E9mn\\u011B rychle. Mimo toho je na\\u010Dten\\u00ED kompletn\\u00EDho view jen do prohl\\u00ED\\u017Ee\\u010De i d\\u016Fvodem, pro\\u010D mohou Single Page Aplikace fungovat i v p\\u0159\\u00EDpad\\u011B, kdy po na\\u010Dten\\u00ED nen\\u00ED u\\u017Eivatel online. V\\u0161echny tyto v\\u00FDhody p\\u0159itom vn\\u00EDm\\u00E1 i s\\u00E1m provozovatel webu. A to tak, \\u017Ee d\\u00EDky d\\u011Blb\\u011B pr\\u00E1ce mezi server a prohl\\u00ED\\u017Ee\\u010D u u\\u017Eivatele, je v\\u00FDrazn\\u011B ni\\u017E\\u0161\\u00ED zat\\u00ED\\u017Een\\u00ED produk\\u010Dn\\u00EDho serveru. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"a\", 14);\n    i0.ɵɵtext(7, \"Vice o SPA (Anglicky)\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AppComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"h5\", 12);\n    i0.ɵɵtext(3, \"V\\u00FDhody Micro-Frontend\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 13);\n    i0.ɵɵtext(5, \"V\\u0161echny v\\u00FDhody se budou t\\u00FDkat nejen samotn\\u00E9ho frontend, ale v\\u0161ech mikroservis. Hlavn\\u00ED v\\u00FDhodou je striktn\\u00ED odd\\u011Blen\\u00ED, d\\u00EDky \\u010Demu\\u017E tak nemus\\u00ED jedna komponenta ovlivnit druhou. Od n\\u00E1vrhu, p\\u0159es v\\u00FDvoj a\\u017E po \\u00FAdr\\u017Ebu tak mohou b\\u00FDt komponenty vyv\\u00EDjeny asynchronn\\u011B a mohou na nich pracovat rozd\\u00EDln\\u00E9 t\\u00FDmy a jedinci. Nav\\u00EDc pokud bych cht\\u011Bl tuto aplikaci stav\\u011Bt monolitickou architekturou, tak mus\\u00EDm zvolit jedinou technologii. Takhle ale d\\u00EDky mikroservis\\u00E1m mohu na jedn\\u00E9 str\\u00E1nce m\\u00EDt React.js, Angular, Vue.js a dal\\u0161\\u00ED frameworky. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"a\", 15);\n    i0.ɵɵtext(7, \"V\\u00EDce o Micro-Frontend (Anglicky)\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AppComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"h5\", 12);\n    i0.ɵɵtext(3, \"V\\u00EDce o t\\u00E9to aplikaci\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 13);\n    i0.ɵɵtext(5, \"Cel\\u00E1 aplikace je realizov\\u00E1na za pomoc\\u00ED javascriptov\\u00E9ho routeru single-spa. D\\u00EDky jeho funkcionalit\\u011B mohu jednotliv\\u00E9 komponenty svojit v celistvou str\\u00E1nku a generovat tak plnohodnotnou aplikaci. Jako prvn\\u00ED komponent, ve kter\\u00E9m je i tento text, je uk\\u00E1zka dynamick\\u00E9ho textu v Angular. Prost\\u0159edn\\u00ED komponent je potom op\\u011Bt uk\\u00E1zkou dynamick\\u00FDch prvk\\u016F, ale tentokr\\u00E1t v jazyce Vue.js. A posledn\\u00ED komponent je v React.js a vyu\\u017Eil jsem jej k napojen\\u00ED na popul\\u00E1rn\\u00ED OpenAI API. Cel\\u00E1 str\\u00E1nka je dostupn\\u00E1 tak\\u00E9 na m\\u00E9m GitHUB. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"a\", 16);\n    i0.ɵɵtext(7, \"Dokumentace\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"a\", 16);\n    i0.ɵɵtext(9, \"GitHUB Respozit\\u00E1\\u0159\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.title = 'angular-app';\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 27,\n  vars: 6,\n  consts: [[\"role\", \"main\", 1, \"container\", \"angular_container\", \"row\", \"justify-content-center\"], [1, \"d-flex\", \"p-2\"], [\"type\", \"hidden\"], [\"selection\", \"\"], [1, \"row\", \"justify-content-center\"], [\"href\", \"#\", 1, \"btn-sm\", \"btn-info\", \"angular_button\", 3, \"click\"], [1, \"d-flex\", \"p-2\", 2, \"background-color\", \"green\"], [1, \"angular_output\", 3, \"ngSwitch\"], [\"class\", \"card\", 4, \"ngSwitchDefault\"], [\"class\", \"card\", 4, \"ngSwitchCase\"], [1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [\"href\", \"https://www.spiceworks.com/tech/devops/articles/what-is-single-page-application/\", \"target\", \"_blank\", 1, \"card-link\"], [\"href\", \"https://www.xenonstack.com/insights/micro-frontend-architecture\", \"target\", \"_blank\", 1, \"card-link\"], [\"href\", \"#\", 1, \"card-link\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \" Single Page Aplikace a Micro-Frontend\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2, 3);\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"a\", 5);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_a_click_7_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(_r0.value = \"spa\");\n      });\n      i0.ɵɵtext(8, \"O Single Page Aplikac\\u00EDch\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"a\", 5);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_a_click_9_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(_r0.value = \"mf\");\n      });\n      i0.ɵɵtext(10, \"O Micro-Frontend\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"a\", 5);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_a_click_12_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(_r0.value = \"spa_plus\");\n      });\n      i0.ɵɵtext(13, \"V\\u00FDhody SPA\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"a\", 5);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_a_click_14_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(_r0.value = \"mf_plus\");\n      });\n      i0.ɵɵtext(15, \"V\\u00FDhody MF\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"a\", 5);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_a_click_16_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(_r0.value = \"about\");\n      });\n      i0.ɵɵtext(17, \"V\\u00EDce o aplikaci\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"div\", 6)(19, \"div\", 7);\n      i0.ɵɵtemplate(20, AppComponent_div_20_Template, 8, 0, \"div\", 8);\n      i0.ɵɵtemplate(21, AppComponent_div_21_Template, 8, 0, \"div\", 9);\n      i0.ɵɵtemplate(22, AppComponent_div_22_Template, 8, 0, \"div\", 9);\n      i0.ɵɵtemplate(23, AppComponent_div_23_Template, 8, 0, \"div\", 9);\n      i0.ɵɵtemplate(24, AppComponent_div_24_Template, 8, 0, \"div\", 9);\n      i0.ɵɵtemplate(25, AppComponent_div_25_Template, 10, 0, \"div\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(26, \"router-outlet\");\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(5);\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngSwitch\", _r0.value);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"spa\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"mf\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"spa_plus\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"mf_plus\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"about\");\n    }\n  },\n  dependencies: [i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, i2.RouterOutlet],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAuBQA,+BAAmC;IAERA,oCAAoB;IAAAA,iBAAK;IAChDA,6BAAqB;IAAAA,4wBAG6G;IAAAA,iBAAI;IACtIA,6BAA6H;IAAAA,qCAAqB;IAAAA,iBAAI;;;;;IAG1JA,+BAAwC;IAEbA,oCAAoB;IAAAA,iBAAK;IAChDA,6BAAqB;IAAAA,4wBAG6G;IAAAA,iBAAI;IACtIA,6BAA6H;IAAAA,qCAAqB;IAAAA,iBAAI;;;;;IAG1JA,+BAAuC;IAEZA,8BAAc;IAAAA,iBAAK;IAC1CA,6BAAqB;IAAAA,urBAIrB;IAAAA,iBAAI;IACJA,6BAA4G;IAAAA,qDAAgC;IAAAA,iBAAI;;;;;IAGpJA,+BAA6C;IAElBA,+BAAU;IAAAA,iBAAK;IACtCA,6BAAqB;IAAAA,wzBAIrB;IAAAA,iBAAI;IACJA,6BAA6H;IAAAA,qCAAqB;IAAAA,iBAAI;;;;;IAG1JA,+BAA4C;IAEjBA,0CAAqB;IAAAA,iBAAK;IACjDA,6BAAqB;IAAAA,4sBAIrB;IAAAA,iBAAI;IACJA,6BAA4G;IAAAA,qDAAgC;IAAAA,iBAAI;;;;;IAGpJA,+BAA0C;IAEfA,8CAAoB;IAAAA,iBAAK;IAChDA,6BAAqB;IAAAA,6pBAIrB;IAAAA,iBAAI;IACJA,6BAA8B;IAAAA,2BAAW;IAAAA,iBAAI;IAC7CA,6BAA8B;IAAAA,2CAAiB;IAAAA,iBAAI;;;AC9E/D,OAAM,MAAOC,YAAY;EALzBC;IAME,UAAK,GAAG,aAAa;;;AADVD,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAE;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDDzBP,8BAAgF;MAEzEA,sDAAqC;MAAAA,iBAAK;MAC/CA,8BAAgC;MAC9BA,8BAAwC;MACaA;QAAAA;QAAA;QAAA,OAASA,2BAAkB,KAAK;MAAA,EAAC;MAACA,6CAAwB;MAAAA,iBAAI;MACjHA,4BAAoF;MAAjCA;QAAAA;QAAA;QAAA,OAASA,2BAAkB,IAAI;MAAA,EAAC;MAACA,iCAAgB;MAAAA,iBAAI;MAE1GA,+BAAwC;MACWA;QAAAA;QAAA;QAAA,OAASA,2BAAkB,UAAU;MAAA,EAAC;MAACA,gCAAU;MAAAA,iBAAI;MACxGA,6BAAyF;MAAtCA;QAAAA;QAAA;QAAA,OAASA,2BAAkB,SAAS;MAAA,EAAC;MAACA,+BAAS;MAAAA,iBAAI;MACtGA,6BAAuF;MAApCA;QAAAA;QAAA;QAAA,OAASA,2BAAkB,OAAO;MAAA,EAAC;MAACA,qCAAe;MAAAA,iBAAI;MAI5GA,+BAAwD;MAElDA,+DASM;MACNA,+DASM;MACNA,+DAUM;MACNA,+DAUM;MACNA,+DAUM;MACNA,gEAWM;MACRA,iBAAM;MAIZA,iCAA+B;;;;MAtEDA,gBAA4B;MAA5BA,oCAA4B;MAW/BA,eAAmB;MAAnBA,oCAAmB;MAUnBA,eAAkB;MAAlBA,mCAAkB;MAWlBA,eAAwB;MAAxBA,yCAAwB;MAWxBA,eAAuB;MAAvBA,wCAAuB;MAWvBA,eAAqB;MAArBA,sCAAqB","names":["i0","AppComponent","constructor","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\PC\\Desktop\\BP_Projekt\\angular-app\\src\\app\\app.component.html","C:\\Users\\PC\\Desktop\\BP_Projekt\\angular-app\\src\\app\\app.component.ts"],"sourcesContent":["<style>\n\n</style>\n\n<!-- Toolbar -->\n\n<div class=\"container angular_container row justify-content-center\" role=\"main\">\n  <div class=\"d-flex p-2\">\n  <h2> Single Page Aplikace a Micro-Frontend</h2>\n  <input type=\"hidden\" #selection>\n    <div class=\"row justify-content-center\">\n      <a href=\"#\" class=\"btn-sm btn-info angular_button\" (click)=\"selection.value = 'spa'\">O Single Page Aplikacích</a>\n      <a href=\"#\" class=\"btn-sm btn-info angular_button\" (click)=\"selection.value = 'mf'\">O Micro-Frontend</a>\n    </div>\n    <div class=\"row justify-content-center\">\n    <a href=\"#\" class=\"btn-sm btn-info angular_button\" (click)=\"selection.value = 'spa_plus'\">Výhody SPA</a>\n    <a href=\"#\" class=\"btn-sm btn-info angular_button\" (click)=\"selection.value = 'mf_plus'\">Výhody MF</a>\n    <a href=\"#\" class=\"btn-sm btn-info angular_button\" (click)=\"selection.value = 'about'\">Více o aplikaci</a>\n    </div>\n  </div>\n  <!-- Terminal -->\n  <div class=\"d-flex p-2\" style=\"background-color: green\">\n  <div class=\"angular_output\" [ngSwitch]=\"selection.value\">\n        <div class=\"card\" *ngSwitchDefault>\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Single Page Aplikace</h5>\n            <p class=\"card-text\">Single Page Aplikace (SPA) jsou takové, které se načítají jako jedna jediná stránka. Aplikace může mít jednostránkový design\n              ale stejně tak může mít klasickou strukturu odkazů. Rozdíl je ale v tom, že narozdíl od zbytku stránek se jednostránkové načítají\n              jednou a následná orientace po stránce se již odehrává v prohlížeči. Díky tomu jsou tak mnohem rychlejší a efektivnějsí. Sami\n              si zkuste, že po kliknutí na jakoukoliv funkcionalitu na této stránce se aplikace nemusí načítat, ale přitom se mění její obsah.</p>\n            <a href=\"https://www.spiceworks.com/tech/devops/articles/what-is-single-page-application/\" target=\"_blank\" class=\"card-link\">Vice o SPA (Anglicky)</a>\n          </div>\n        </div>\n        <div class=\"card\" *ngSwitchCase=\"'spa'\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Single Page Aplikace</h5>\n            <p class=\"card-text\">Single Page Aplikace (SPA) jsou takové, které se načítají jako jedna jediná stránka. Aplikace může mít jednostránkový design\n              ale stejně tak může mít klasickou strukturu odkazů. Rozdíl je ale v tom, že narozdíl od zbytku stránek se jednostránkové načítají\n              jednou a následná orientace po stránce se již odehrává v prohlížeči. Díky tomu jsou tak mnohem rychlejší a efektivnějsí. Sami\n              si zkuste, že po kliknutí na jakoukoliv funkcionalitu na této stránce se aplikace nemusí načítat, ale přitom se mění její obsah.</p>\n            <a href=\"https://www.spiceworks.com/tech/devops/articles/what-is-single-page-application/\" target=\"_blank\" class=\"card-link\">Vice o SPA (Anglicky)</a>\n          </div>\n        </div>\n        <div class=\"card\" *ngSwitchCase=\"'mf'\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Micro-Frontend</h5>\n            <p class=\"card-text\">Micro-Frontend (MF) je jedna z variant, jak lze pojmout vývoj aplikace. Je pravým opakem aplikací monolitických. U monolitické\n              aplikace se totiž vývoj a funcionalita odehrává v podobě jedné spojité aplikace. U Micro-Fronted se ale aplikuje takzvaná\n              mikroservis architektura. Ta rozděluje celek do jednotlivých komponent / služeb, které jsou na sobě nezávislé. To umožňuje jejich\n              oddělený vývoj i nahrazování. Micro-Frontend je pak pojem věnující se spojení view všech komponent do na pohled celistvé stránky.\n            </p>\n            <a href=\"https://www.xenonstack.com/insights/micro-frontend-architecture\" target=\"_blank\" class=\"card-link\">Více o Micro-Frontend (Anglicky)</a>\n          </div>\n        </div>\n        <div class=\"card\" *ngSwitchCase=\"'spa_plus'\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Výhody SPA</h5>\n            <p class=\"card-text\">SPA má oproti dalším technologiím opravdu velké množství výhod. Tou první je rychlost, kdy se díky načtení celé\n              prezentační logiky odehrává orientace na stránce extrémně rychle. Mimo toho je načtení kompletního view jen do prohlížeče i důvodem,\n              proč mohou Single Page Aplikace fungovat i v případě, kdy po načtení není uživatel online. Všechny tyto výhody přitom vnímá i sám\n              provozovatel webu. A to tak, že díky dělbě práce mezi server a prohlížeč u uživatele, je výrazně nižší zatížení produkčního serveru.\n            </p>\n            <a href=\"https://www.spiceworks.com/tech/devops/articles/what-is-single-page-application/\" target=\"_blank\" class=\"card-link\">Vice o SPA (Anglicky)</a>\n          </div>\n        </div>\n        <div class=\"card\" *ngSwitchCase=\"'mf_plus'\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Výhody Micro-Frontend</h5>\n            <p class=\"card-text\">Všechny výhody se budou týkat nejen samotného frontend, ale všech mikroservis. Hlavní výhodou je striktní oddělení,\n              díky čemuž tak nemusí jedna komponenta ovlivnit druhou. Od návrhu, přes vývoj až po údržbu tak mohou být komponenty vyvíjeny asynchronně\n              a mohou na nich pracovat rozdílné týmy a jedinci. Navíc pokud bych chtěl tuto aplikaci stavět monolitickou architekturou, tak musím\n              zvolit jedinou technologii. Takhle ale díky mikroservisám mohu na jedné stránce mít React.js, Angular, Vue.js a další frameworky.\n            </p>\n            <a href=\"https://www.xenonstack.com/insights/micro-frontend-architecture\" target=\"_blank\" class=\"card-link\">Více o Micro-Frontend (Anglicky)</a>\n          </div>\n        </div>\n        <div class=\"card\" *ngSwitchCase=\"'about'\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Více o této aplikaci</h5>\n            <p class=\"card-text\">Celá aplikace je realizována za pomocí javascriptového routeru single-spa. Díky jeho funkcionalitě mohu jednotlivé\n              komponenty svojit v celistvou stránku a generovat tak plnohodnotnou aplikaci. Jako první komponent, ve kterém je i tento text, je ukázka\n              dynamického textu v Angular. Prostřední komponent je potom opět ukázkou dynamických prvků, ale tentokrát v jazyce Vue.js. A poslední\n              komponent je v React.js a využil jsem jej k napojení na populární OpenAI API. Celá stránka je dostupná také na mém GitHUB.\n            </p>\n            <a href=\"#\" class=\"card-link\">Dokumentace</a>\n            <a href=\"#\" class=\"card-link\">GitHUB Respozitář</a>\n          </div>\n        </div>\n      </div>\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-app';\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}